<UserControl x:Class="ClientUI.Views.DEROptimalCommandingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customControls="clr-namespace:ClientUI.CustomControls.DEROptimalFeedbackIcons"
             xmlns:converters="clr-namespace:ClientUI.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewModel="clr-namespace:ClientUI.ViewModels.DEROptimalCommanding"
             xmlns:commandingViews="clr-namespace:ClientUI.Views.DEROptimalCommanding.CommandingParameters"
             xmlns:commandingViewModels="clr-namespace:ClientUI.ViewModels.DEROptimalCommanding.OptimalCommanding.CommandParameterViewModels"
             xmlns:summaryViewModels="clr-namespace:ClientUI.ViewModels.DEROptimalCommanding.OptimalCommanding.CommandSummaryViewModels"
             xmlns:local="clr-namespace:ClientUI.Views"
             mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type commandingViewModels:NominalPowerBasedOptimalCommandingViewModel}">
            <commandingViews:NominalPowerPercentageCommandingView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type commandingViewModels:ReserveBasedOptimalCommandingViewModel}">
            <commandingViews:ReserveBasedCommandingView />
        </DataTemplate>
        <converters:MultiValueBindingConverter x:Key="multiValueConverter" />
    </UserControl.Resources>
    <Grid d:DataContext="{x:Type viewModel:DEROptimalCommandingViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Commanding Configuration" FontSize="30" HorizontalAlignment="Center" Margin="0,10,0,0" Foreground="White"/>
                <materialDesign:Card Margin="10" UniformCornerRadius="10">
                    <StackPanel Orientation="Vertical" Margin="10,10,0,0">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Commanding type" Foreground="White" FontSize="20"/>
                            <Border BorderThickness="1" BorderBrush="White" CornerRadius="5" Margin="0,2,10,10">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="10,10,0,10" Text="Type: " VerticalAlignment="Center"/>
                                    <ComboBox ItemsSource="{Binding CommandingTypes}" SelectedItem="{Binding SelectedCommandingType}" DisplayMemberPath="Name" MinWidth="150" VerticalAlignment="Center" Margin="10,10,10,10"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <ContentPresenter Content="{Binding CommandingParameterSettingViewModel}" />
                        <Button Content="Calculate" HorizontalAlignment="Left" Margin="0,20,10,10" Command="{Binding CalculateCommand}">
                            <Button.CommandParameter>
                                <MultiBinding Converter="{StaticResource multiValueConverter}">
                                    <Binding Path="CommandingParameterSettingViewModel.SetpointValid"/>
                                    <Binding Path="CommandingParameterSettingViewModel.SetPoint"/>
                                </MultiBinding>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>
                </materialDesign:Card>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
            <TextBlock Grid.Row="0" Text="Commanding sequence" HorizontalAlignment="Center" Foreground="White" FontSize="30"/>
            <materialDesign:Card Grid.Row="1" UniformCornerRadius="5" Margin="10,10,0,10">
                <ListView ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding SuggestedValuesSummaryViewModel.SuggestedValues}" HorizontalContentAlignment="Stretch">
                    <ListView.Resources>
                        <DataTemplate DataType="{x:Type summaryViewModels:NominalPowerBasedSuggestedValueViewModel}">
                            <Grid d:DataContext="{x:Type summaryViewModels:NominalPowerBasedSuggestedValueViewModel}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Grid.RowSpan="3" BorderThickness="2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Indications.Valid}" Value="True">
                                                    <Setter Property="BorderBrush" Value="LimeGreen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Indications.Error}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>

                                <customControls:FeedbackIconCollection Grid.Row="0" DataContext="{Binding Indications}" HorizontalAlignment="Right"/>

                                <TextBlock FontSize="24" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="{Binding Name}">
                                </TextBlock>
                                <StackPanel Grid.Row="1" Orientation="Vertical" Margin="10,10,0,10">
                                    <TextBlock FontSize="14" VerticalAlignment="Center">
                                        <Run Text="Nominal power:" />
                                        <Run Text="{Binding NominalPower, StringFormat={}{0:N2} kW}" />
                                    </TextBlock>
                                    <TextBlock FontSize="14" VerticalAlignment="Center" Margin="0,10,0,0">
                                        <Run Text="State of charge:" />
                                        <Run Text="{Binding StateOfCharge, StringFormat={}{0:N2} %}" />
                                    </TextBlock>
                                    <TextBlock FontSize="14" VerticalAlignment="Center" Margin="0,10,0,0">
                                        <Run Text="Active power:" />
                                        <Run Text="{Binding ActivePower, StringFormat={}{0:N2}}"/>
                                        <Run Text="{Binding DeltaActivePower, StringFormat={}{0:+ 0.##;- 0.##;+ 0}}" Foreground="LimeGreen"/>
                                        <Run Text=" kW"/>
                                    </TextBlock>
                                    <TextBlock FontSize="14" VerticalAlignment="Center" Margin="0,10,0,0">
                                        <Run Text="Load:" />
                                        <Run Text="{Binding CurrentLoad, StringFormat={}{0:N2}%}"/>
                                        <Run Text="{Binding DeltaLoad, StringFormat={}{0:+ 0.##;- 0.##;+ 0}%}" Foreground="LimeGreen"/>
                                    </TextBlock>
                                    <TextBlock FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,0" TextWrapping="Wrap" Text="{Binding Comment}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Indications.Valid}" Value="True">
                                                    <Setter Property="Foreground" Value="LimeGreen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Indications.Error}" Value="True">
                                                      <Setter Property="Foreground" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type summaryViewModels:ReserveSuggestedValueViewModel}">
                            <Grid d:DataContext="{x:Type summaryViewModels:ReserveSuggestedValueViewModel}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Grid.RowSpan="3" BorderThickness="2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Indications.Valid}" Value="True">
                                                    <Setter Property="BorderBrush" Value="LimeGreen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Indications.Error}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>

                                <customControls:FeedbackIconCollection Grid.Row="0" DataContext="{Binding Indications}" HorizontalAlignment="Right"/>

                                <TextBlock FontSize="24" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Text="{Binding Name}">
                                </TextBlock>
                                <StackPanel Grid.Row="1" Orientation="Vertical" Margin="10,10,0,10">
                                    <TextBlock FontSize="14" VerticalAlignment="Center">
                                        <Run Text="Nominal power:" />
                                        <Run Text="{Binding NominalPower, StringFormat={}{0:N2} kW}" />
                                    </TextBlock>
                                    <TextBlock FontSize="14" VerticalAlignment="Center" Margin="0,10,0,0">
                                        <Run Text="State of charge:" />
                                        <Run Text="{Binding StateOfCharge, StringFormat={}{0:N2} %}" />
                                    </TextBlock>
                                    <TextBlock FontSize="14" VerticalAlignment="Center" Margin="0,10,0,0">
                                        <Run Text="Active power:" />
                                        <Run Text="{Binding ActivePower, StringFormat={}{0:N2}}"/>
                                        <Run Text="{Binding DeltaActivePower, StringFormat={}{0:+ 0.##;- 0.##;+ 0}}" Foreground="LimeGreen"/>
                                        <Run Text=" kW"/>
                                    </TextBlock>
                                    <TextBlock FontSize="14" VerticalAlignment="Center" Margin="0,10,0,0">
                                        <Run Text="Load:" />
                                        <Run Text="{Binding CurrentLoad, StringFormat={}{0:N2}%}"/>
                                        <Run Text="{Binding DeltaLoad, StringFormat={}{0:+ 0.##;- 0.##;+ 0}%}" Foreground="LimeGreen"/>
                                    </TextBlock>
                                    <TextBlock FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,0" TextWrapping="Wrap" Text="{Binding Comment}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="Transparent"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Indications.Valid}" Value="True">
                                                        <Setter Property="Foreground" Value="LimeGreen"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Indications.Error}" Value="True">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.Resources>
                </ListView>
            </materialDesign:Card>
            <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="10,10,0,10">
                <Button Command="{Binding SendCommandSequenceCommand}">Execute commands</Button>
                <Button Margin="30,0,0,0" Command="{Binding ClearSuggestedCommands}">Clear commands</Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
